/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RecipeHardwareResponse from './RecipeHardwareResponse';
import RecipeIngredientCategoryResponse from './RecipeIngredientCategoryResponse';
import RecipeLabelResponse from './RecipeLabelResponse';
import RecipeStepResponse from './RecipeStepResponse';

/**
* The RecipeResponse model module.
* @module model/RecipeResponse
* @version v0
*/
export default class RecipeResponse {
    /**
    * Constructs a new <code>RecipeResponse</code>.
    * @alias module:model/RecipeResponse
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>RecipeResponse</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RecipeResponse} obj Optional instance to populate.
    * @return {module:model/RecipeResponse} The populated <code>RecipeResponse</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecipeResponse();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recipeType')) {
                obj['recipeType'] = ApiClient.convertToType(data['recipeType'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('totalTime')) {
                obj['totalTime'] = ApiClient.convertToType(data['totalTime'], 'Number');
            }
            if (data.hasOwnProperty('prepTime')) {
                obj['prepTime'] = ApiClient.convertToType(data['prepTime'], 'Number');
            }
            if (data.hasOwnProperty('cookTime')) {
                obj['cookTime'] = ApiClient.convertToType(data['cookTime'], 'Number');
            }
            if (data.hasOwnProperty('serves')) {
                obj['serves'] = ApiClient.convertToType(data['serves'], 'String');
            }
            if (data.hasOwnProperty('labelList')) {
                obj['labelList'] = ApiClient.convertToType(data['labelList'], [RecipeLabelResponse]);
            }
            if (data.hasOwnProperty('hardwareList')) {
                obj['hardwareList'] = ApiClient.convertToType(data['hardwareList'], [RecipeHardwareResponse]);
            }
            if (data.hasOwnProperty('stepList')) {
                obj['stepList'] = ApiClient.convertToType(data['stepList'], [RecipeStepResponse]);
            }
            if (data.hasOwnProperty('ingredientCategoryList')) {
                obj['ingredientCategoryList'] = ApiClient.convertToType(data['ingredientCategoryList'], [RecipeIngredientCategoryResponse]);
            }
        }
        return obj;
    }

    /**
    * @member {Number} id
    */
    id = undefined;
    /**
    * @member {String} name
    */
    name = undefined;
    /**
    * @member {module:model/RecipeResponse.RecipeTypeEnum} recipeType
    */
    recipeType = undefined;
    /**
    * @member {String} description
    */
    description = undefined;
    /**
    * @member {Number} totalTime
    */
    totalTime = undefined;
    /**
    * @member {Number} prepTime
    */
    prepTime = undefined;
    /**
    * @member {Number} cookTime
    */
    cookTime = undefined;
    /**
    * @member {String} serves
    */
    serves = undefined;
    /**
    * @member {Array.<module:model/RecipeLabelResponse>} labelList
    */
    labelList = undefined;
    /**
    * @member {Array.<module:model/RecipeHardwareResponse>} hardwareList
    */
    hardwareList = undefined;
    /**
    * @member {Array.<module:model/RecipeStepResponse>} stepList
    */
    stepList = undefined;
    /**
    * @member {Array.<module:model/RecipeIngredientCategoryResponse>} ingredientCategoryList
    */
    ingredientCategoryList = undefined;



    /**
    * Allowed values for the <code>recipeType</code> property.
    * @enum {String}
    * @readonly
    */
    static RecipeTypeEnum = {
        /**
         * value: "RecipeType.FOOD(value=Food)"
         * @const
         */
        "FOOD(value&#x3D;Food)": "RecipeType.FOOD(value=Food)",
        /**
         * value: "RecipeType.DRINK(value=Drink)"
         * @const
         */
        "DRINK(value&#x3D;Drink)": "RecipeType.DRINK(value=Drink)",
        /**
         * value: "RecipeType.PET(value=Pet)"
         * @const
         */
        "PET(value&#x3D;Pet)": "RecipeType.PET(value=Pet)"    };

}
