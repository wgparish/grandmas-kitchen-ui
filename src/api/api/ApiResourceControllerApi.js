/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InlineResponse400 from '../model/InlineResponse400';
import SecurityConfiguration from '../model/SecurityConfiguration';
import SwaggerResource from '../model/SwaggerResource';
import UiConfiguration from '../model/UiConfiguration';

/**
* ApiResourceController service.
* @module api/ApiResourceControllerApi
* @version v0
*/
export default class ApiResourceControllerApi {

    /**
    * Constructs a new ApiResourceControllerApi. 
    * @alias module:api/ApiResourceControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the securityConfiguration operation.
     * @callback module:api/ApiResourceControllerApi~securityConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the securityConfiguration1 operation.
     * @callback module:api/ApiResourceControllerApi~securityConfiguration1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfiguration1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration1(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the securityConfiguration2 operation.
     * @callback module:api/ApiResourceControllerApi~securityConfiguration2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfiguration2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration2(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'OPTIONS',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the securityConfiguration3 operation.
     * @callback module:api/ApiResourceControllerApi~securityConfiguration3Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfiguration3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration3(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'HEAD',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the securityConfiguration4 operation.
     * @callback module:api/ApiResourceControllerApi~securityConfiguration4Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfiguration4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration4(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the securityConfiguration5 operation.
     * @callback module:api/ApiResourceControllerApi~securityConfiguration5Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfiguration5Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration5(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the securityConfiguration6 operation.
     * @callback module:api/ApiResourceControllerApi~securityConfiguration6Callback
     * @param {String} error Error message, if any.
     * @param {module:model/SecurityConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~securityConfiguration6Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SecurityConfiguration}
     */
    securityConfiguration6(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SecurityConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/security', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResourcesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources1 operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResources1Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResources1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources1(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources2 operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResources2Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResources2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources2(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'OPTIONS',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources3 operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResources3Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResources3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources3(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'HEAD',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources4 operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResources4Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResources4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources4(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources5 operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResources5Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResources5Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources5(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the swaggerResources6 operation.
     * @callback module:api/ApiResourceControllerApi~swaggerResources6Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/SwaggerResource>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~swaggerResources6Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/SwaggerResource>}
     */
    swaggerResources6(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [SwaggerResource];

      return this.apiClient.callApi(
        '/swagger-resources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration operation.
     * @callback module:api/ApiResourceControllerApi~uiConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration1 operation.
     * @callback module:api/ApiResourceControllerApi~uiConfiguration1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfiguration1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration1(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration2 operation.
     * @callback module:api/ApiResourceControllerApi~uiConfiguration2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfiguration2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration2(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'OPTIONS',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration3 operation.
     * @callback module:api/ApiResourceControllerApi~uiConfiguration3Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfiguration3Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration3(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'HEAD',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration4 operation.
     * @callback module:api/ApiResourceControllerApi~uiConfiguration4Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfiguration4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration4(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration5 operation.
     * @callback module:api/ApiResourceControllerApi~uiConfiguration5Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfiguration5Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration5(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the uiConfiguration6 operation.
     * @callback module:api/ApiResourceControllerApi~uiConfiguration6Callback
     * @param {String} error Error message, if any.
     * @param {module:model/UiConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ApiResourceControllerApi~uiConfiguration6Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiConfiguration}
     */
    uiConfiguration6(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = UiConfiguration;

      return this.apiClient.callApi(
        '/swagger-resources/configuration/ui', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
