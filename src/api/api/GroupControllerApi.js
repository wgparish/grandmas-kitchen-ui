/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import GroupAddRequest from '../model/GroupAddRequest';
import GroupJoinedResponse from '../model/GroupJoinedResponse';
import GroupPublicResponse from '../model/GroupPublicResponse';
import GroupUpdateRequest from '../model/GroupUpdateRequest';
import GroupUserAdminResponse from '../model/GroupUserAdminResponse';
import GroupUserResponse from '../model/GroupUserResponse';
import GroupUserUpdateRequest from '../model/GroupUserUpdateRequest';
import InlineResponse400 from '../model/InlineResponse400';

/**
* GroupController service.
* @module api/GroupControllerApi
* @version v0
*/
export default class GroupControllerApi {

    /**
    * Constructs a new GroupControllerApi. 
    * @alias module:api/GroupControllerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getGroupAdminUserList operation.
     * @callback module:api/GroupControllerApi~getGroupAdminUserListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GroupUserAdminResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~getGroupAdminUserListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GroupUserAdminResponse>}
     */
    getGroupAdminUserList(groupId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groupId': groupId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [GroupUserAdminResponse];

      return this.apiClient.callApi(
        '/group/secure/admin/user/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getGroupAdminUserPendingList operation.
     * @callback module:api/GroupControllerApi~getGroupAdminUserPendingListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GroupUserAdminResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~getGroupAdminUserPendingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GroupUserAdminResponse>}
     */
    getGroupAdminUserPendingList(groupId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groupId': groupId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [GroupUserAdminResponse];

      return this.apiClient.callApi(
        '/group/secure/admin/user/list/pending', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getGroupList operation.
     * @callback module:api/GroupControllerApi~getGroupListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GroupJoinedResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~getGroupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GroupJoinedResponse>}
     */
    getGroupList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [GroupJoinedResponse];

      return this.apiClient.callApi(
        '/group/secure/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getGroupListFavorite operation.
     * @callback module:api/GroupControllerApi~getGroupListFavoriteCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GroupJoinedResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~getGroupListFavoriteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GroupJoinedResponse>}
     */
    getGroupListFavorite(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [GroupJoinedResponse];

      return this.apiClient.callApi(
        '/group/secure/list/favorite', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getGroupUserList operation.
     * @callback module:api/GroupControllerApi~getGroupUserListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GroupUserResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~getGroupUserListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GroupUserResponse>}
     */
    getGroupUserList(groupId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groupId': groupId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [GroupUserResponse];

      return this.apiClient.callApi(
        '/group/secure/user/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getPublicGroupList operation.
     * @callback module:api/GroupControllerApi~getPublicGroupListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GroupPublicResponse>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~getPublicGroupListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GroupPublicResponse>}
     */
    getPublicGroupList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = [GroupPublicResponse];

      return this.apiClient.callApi(
        '/group/secure/public/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the groupAdd operation.
     * @callback module:api/GroupControllerApi~groupAddCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPublicResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~groupAddCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupPublicResponse}
     */
    groupAdd(opts, callback) {
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*', 'application/json'];
      let returnType = GroupPublicResponse;

      return this.apiClient.callApi(
        '/group/secure/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the groupAdminUpdate operation.
     * @callback module:api/GroupControllerApi~groupAdminUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPublicResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~groupAdminUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupPublicResponse}
     */
    groupAdminUpdate(opts, callback) {
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*', 'application/json'];
      let returnType = GroupPublicResponse;

      return this.apiClient.callApi(
        '/group/secure/admin/update', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the groupAdminUserUpdate operation.
     * @callback module:api/GroupControllerApi~groupAdminUserUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupUserAdminResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~groupAdminUserUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupUserAdminResponse}
     */
    groupAdminUserUpdate(opts, callback) {
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*', 'application/json'];
      let returnType = GroupUserAdminResponse;

      return this.apiClient.callApi(
        '/group/secure/admin/user/update', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the groupView operation.
     * @callback module:api/GroupControllerApi~groupViewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupPublicResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/GroupControllerApi~groupViewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupPublicResponse}
     */
    groupView(groupId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groupId': groupId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json'];
      let returnType = GroupPublicResponse;

      return this.apiClient.callApi(
        '/group/secure/view', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
